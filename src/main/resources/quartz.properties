org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#指定线程数量。一般1-100足以满足你的应用需求了。
org.quartz.threadPool.threadCount=10
#scheduler实例的标志id，必须是全局唯一的，即使在集群环境中”逻辑”相同的scheduler,
#只有在”org.quartz.scheduler.instanceId”设置为”AUTO”的时候才使用该属性设置。默认情况下，
#“org.quartz.simpl.SimpleInstanceIdGenerator”是基于instanceId和时间戳来自动生成的。
# 其他的id生成器的实现包括 SystemPropertyInstanceIdGenerator 从系统属性获取 “org.quartz.scheduler.instanceId”, 和 HostnameInstanceIdGenerator 使用主机名 (InetAddress.getLocalHost().getHostName())。
org.quartz.scheduler.instanceId=AUTO
#指定线程名，如果不指定的话，会自动使用org.quartz.scheduler.instanceName属性值加上后缀字符串”_QuartzSchedulerThread”.
quartz.scheduler.instanceName=SpringJPAQuartzScheduler
#建议设置为“org.terracotta.quartz.skipUpdateCheck=true”不会在程序运行中还去检查quartz是否有版本更新。
org.quartz.scheduler.skipUpdateCheck=true
## Be sure to run the appropriate script(under docs/dbTables) first to create tables
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# Configuring JDBCJobStore with the Table Prefix
org.quartz.jobStore.tablePrefix=QRTZ_
# Using DriverDelegate
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# Using datasource
org.quartz.jobStore.dataSource=quartzDataSource
org.quartz.jobStore.isClustered=true
org.quartz.scheduler.jobFactory.class=org.quartz.simpl.SimpleJobFactory
# Define the datasource to use
org.quartz.dataSource.quartzDataSource.driver=com.mysql.jdbc.Driver
org.quartz.dataSource.quartzDataSource.URL=jdbc:mysql:///springboot_jpa?useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&createDatabaseIfNotExist=true&serverTimezone=GMT%2B8&useSSL=false
org.quartz.dataSource.quartzDataSource.user=root
org.quartz.dataSource.quartzDataSource.password=root
org.quartz.dataSource.quartzDataSource.maxConnections=30
